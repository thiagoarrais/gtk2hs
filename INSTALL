gtk2hs: A binding of Gtk Version 2 for the programming language Haskell

The library currently wraps most functions for GUI programming from
the gtk 2.0 libraries. Furthermore there is support for the Pixbuf
functions and the SourceView widget.

The GHC Haskell compiler, version 5.02 or greater, is required. Some
callback (those with more than 4 words of arguments...) cannot be used
on Solaris due to a limitation in GHC. Gtk2hs has been compiled
successfully on FreeBSD, Linux, Solaris, Darwin and Windows (MinGW).

Building
--------

If you build on Windows, read "Building on Windows" first.

The following assumes that the sources are in ~/gtk2hs.
1. Produce a configure file.

~/gtk2hs:$ autoconf

You may omit this step if you've downloaded the source tarball. If, however,
step 2 fails for no obvious reason you should run autoconf. (I've seen
ghc-pkg not being found when copying ./configure from FreeBSD, autoconf 2.53
to Solaris, autoconf 2.52.)

2. Run the configure script.

The configure script has several useful options, particularly:

--with-hc=<path to your ghc>
  Uses the specified GHC for compilation and for installation of the package.

--with-c2hs=no
  Uses the c2hs binding tool that comes with gtk2hs. This special version
  works much faster than the normal c2hs form Manuel's website. See
  configure.in for more details. This setting is the default.

--with-c2hs=yes
  Search for a c2hs installation in the current PATH.

--with-c2hs=<path to your c2hs-config>
  Use this specific installation of c2hs. Make sure you specify the c2hs-config
  program, not c2hs itself.

--with-pkgconf=<your pkg.conf file>
  Use a local package.conf file to install the gtk2hs package in. See below.

With --help you can ask ./configure what options it supports.

Add any of these options to the following command:

~/gtk2hs:$ ./configure

3. Building the sources.

In the following "make" stands for GNU make. If your system has a program
called "gmake" then make is probably not GNU make. In this case use "gmake".

To build the sources you issue:

~/gtk2hs:$ make

This will build the package "in place" which means all library files
stay in the source tree. If you have used --with-pkgconf=mypkg.conf in
step two, the gtk2hs and mogul package will be available through this
file. The default name for this file is localpackage.conf in the root
of the source tree. To use an "in place" installation you say:

ghc --make MyProg.hs -package-conf ~/gtk2hs/localpackage.conf -package mogul

If you are happy with this solution or if you don't have the
privileges to write to the location where GHC lives, you stop here.

4. Install the libraries.

The alternative is to properly install the packages into GHC
itself. In case GHC lives in a privileged place you need to become
root first. To install the library say:

~/gtk2hs:$ make install

Now you can compile your programs simply by saying:

ghc --make MyProg.hs -package mogul

5. Documentation

The documentation is only preliminary, as such it cannot yet be
installed, only built. You need to have xsltproc installed,
furthermore Docbook XML and XSLT in the version 4.1.2. There is no
propper way to find the DTD and the stylesheet, so you need to tell
configure where to find them. You say

~/gtk2hs:$ ./configure --with-catalog=/usr/local/share/xml/catalog

for a system which has a XML catalog file (with a pointer to the
Docbook DTD) installed in the mentioned place. The configure script
now tries to be clever and searches for translators to html in
/usr/local/share/xsl/. If that is not successful, you need to
explicitly state --with-html=/usr/local/share/xsl/xhtml/chunk.xsl or
similar. If all is ok you find some html files in ~/gtk2hs/doc/MOGUL
and ~/gtk2hs/doc/GTK .

Note:

1. Do not delete the source tree if you intend to deinstall the package at
   some point. You do this by saying

   ~/gtk2hs:$ make uninstall

   in the root of the source tree. This will properly remove the package from
   GHC and remove any installed file.

2. After installing the sources, the packages are not available anymore from
   the local package file. At the time of writing GHC has a problem with the
   same package being available in the global and the local package.conf file.
   If this should be fixed in the future, you can say

   ~/gtk2hs:$ make inplace

   to install the package locally again.

3. If your compilation falls over saying

	Foo.hs: file name does not match module name `Foo'

   you should check if running hsc2hs resulted in a message like

	ld.so.1: general/StockItems_hsc_make: fatal: libgtk-x11-2.0.so.0: open failed: 
	No such file or directory
	Killed

  which is an indicator that you have not set LD_LIBRARY_PATH to the
  path where the GTK dynamic libraries live. It is a bug in the 5.02
  distribution of GHC that hsc2hs does not stop here. Delete Foo.hs
  before you do a second attempt.

Building on Window
--------------------

Install MSYS and MinGW.  Download the following files from
http://www.gimp.org/~tml/gimp/win32/downloads.html : atk-1.4.0.zip,
atk-dev-1.4.0.zip, gettext-runtime-0.12.1.bin.woe32.zip,
glib-2.2.3.zip, glib-dev-2.2.3.zip, gtk+-2.2.4.zip,
gtk+-dev-2.2.4.zip, libiconv-1.9.1.bin.woe32.zip, pango-1.2.5.zip,
pango-dev-1.2.5.zip, pkgconfig-0.15.zip. Unpack these files in a
*separate* (1) directory from MinGW. Add the bin/ and the /lib
directory to your path via the Control Panel (or right-clicking My
Computer, Properties, Advanced). Make sure GHC is in your
path. Proceed with the general instructions. If you have the right to
modify the global package file, then I recommend to install the
library into the ghc directory by using configure's --prefix= option.

(1) If you don't use a separate directory, GHC's local gcc might pick
up libraries from MinGW, resulting in link errors or worse.

Please report problems to the Gtk2hs mailing list
<gtk2hs-users@lists.sourceforge.net>.

Have fun,
Axel.
